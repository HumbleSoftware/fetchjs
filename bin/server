#!/usr/bin/env node

var
  fs = require('fs'),
  program = require('commander'),
  _ = require('underscore'),
  watch = require('node-watch'),
  forever = require('forever-monitor'),
  server = require('../lib/server');

// CLI
program
  .version(JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8')).version)
  .usage('[options] [files]')
  .option('-l, --latency <latency>', 'target latency', 50)
  .option('-p, --port <port>', 'port to listen on', 3000)
  .option('-w, --watch', 'watch for changes')
  .parse(process.argv);

// Run:
var
  base = program.args[0] || process.cwd(),
  path = base + '/routes',
  options = {
    port : program.port,
    latency : program.latency,
    path : path
  };

if (program.watch) {

  // Recurse without watch:

  var
    args = _.without(process.argv, '-w', '--watch'),
    child;

  start();
  watch(
    base,
    {
      followSymLinks : true
    },
    _.debounce(function () {
      if (child) child.stop();
      start();
    }, 10)
  );
  function start () {
    child = forever.start(args, {});
    process.stdin.pipe(child.child.stdio[0]);
  }
} else {
  // If not watching start the server
  server(options);
}
