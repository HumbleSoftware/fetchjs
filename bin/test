#!/usr/bin/env node

// dependencies
var
  fs = require('fs'),
  program = require('commander'),
  _ = require('underscore'),
  watch = require('node-watch'),
  forever = require('forever-monitor'),
  spawn = require('child_process').spawn,
  spec = require('../lib/spec');

// CLI
program
  .version(JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8')).version)
  .usage('[options] [url] [files]')
  .option('-R, --reporter <name>', 'mocha reporter', 'spec')
  .option('-g, --grep <name>', 'mocha grep', '')
  .option('-w, --watch', 'watch for changes')
  .parse(process.argv);

var
  url = program.args[0],
  files = program.args[1];

if (/^http(s){0,1}:\/\//i.test(url)) {
  url = url;
} else {
  files = url;
}

var
  options = {
    base : url || 'http://localhost:3000',
    reporter : program.reporter,
    path : files || process.cwd() + '/spec',
    grep : program.grep
  };

if (program.watch) {

  var
    args = _.without(process.argv, '-w', '--watch'),
    program = args.shift(),
    child;

  start();
  watch(
    files || process.cwd(),
//    options.path,
    {
      followSymLinks : true
    },
    _.debounce(function () {
      if (child) child.kill();
      start();
    }, 10)
  );
  function start () {
    child = spawn(program, args);
    process.stdin.pipe(child.stdio[0]);
    child.stdout.pipe(process.stdout);
    child.stderr.pipe(process.stderr);
  }
} else {
  // Not watching execute command
  spec(options);
}
