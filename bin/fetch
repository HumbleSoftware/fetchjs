#!/usr/bin/env node

var fs = require('fs');
var program = require('commander');
var spawn = require('child_process').spawn;
var fetchServer = require('./server');
var fetchTest = require('./test');
var fetchBuild = require('./build');

program
  .version(JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8')).version);

program
  .command('server')
  .usage('[options] [files]')
  .option('-l, --latency <latency>', 'target latency', 50)
  .option('-p, --port <port>', 'port to listen on', 3000)
  .option('-w, --watch', 'watch for changes')
  .option('--static', 'serve the API as a static client-side build at /')
  .action(fetchServer);

program
  .command('test <url>')
  .usage('[options] <url>')
  .option('-R, --reporter <name>', 'mocha reporter', 'spec')
  .option('-g, --grep <name>', 'mocha grep', '')
  .option('-w, --watch', 'watch for changes')
  .option('-s, --spec <files>', 'spec files')
  .action(fetchTest);

program
  .command('build')
  .usage('[options]')
  .option('-m, --mocks <path>', 'location of the data mocks', 'mocks')
  .option('-r, --routes <path>', 'location of the routes', 'routes')
  .option('-o, --output <path>', 'build output location', 'static-build.js')
  .action(fetchBuild);

program.parse(process.argv);
